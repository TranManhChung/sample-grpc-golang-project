// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: Service.proto

package sample

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SampleReq struct {
	Mess                 string   `protobuf:"bytes,1,opt,name=mess,proto3" json:"mess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SampleReq) Reset()         { *m = SampleReq{} }
func (m *SampleReq) String() string { return proto.CompactTextString(m) }
func (*SampleReq) ProtoMessage()    {}
func (*SampleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{0}
}
func (m *SampleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleReq.Unmarshal(m, b)
}
func (m *SampleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleReq.Marshal(b, m, deterministic)
}
func (m *SampleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleReq.Merge(m, src)
}
func (m *SampleReq) XXX_Size() int {
	return xxx_messageInfo_SampleReq.Size(m)
}
func (m *SampleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleReq.DiscardUnknown(m)
}

var xxx_messageInfo_SampleReq proto.InternalMessageInfo

func (m *SampleReq) GetMess() string {
	if m != nil {
		return m.Mess
	}
	return ""
}

type SampleRes struct {
	Data                 *SampleRes_Data  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error                *SampleRes_Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SampleRes) Reset()         { *m = SampleRes{} }
func (m *SampleRes) String() string { return proto.CompactTextString(m) }
func (*SampleRes) ProtoMessage()    {}
func (*SampleRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{1}
}
func (m *SampleRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleRes.Unmarshal(m, b)
}
func (m *SampleRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleRes.Marshal(b, m, deterministic)
}
func (m *SampleRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleRes.Merge(m, src)
}
func (m *SampleRes) XXX_Size() int {
	return xxx_messageInfo_SampleRes.Size(m)
}
func (m *SampleRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleRes.DiscardUnknown(m)
}

var xxx_messageInfo_SampleRes proto.InternalMessageInfo

func (m *SampleRes) GetData() *SampleRes_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SampleRes) GetError() *SampleRes_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type SampleRes_Data struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SampleRes_Data) Reset()         { *m = SampleRes_Data{} }
func (m *SampleRes_Data) String() string { return proto.CompactTextString(m) }
func (*SampleRes_Data) ProtoMessage()    {}
func (*SampleRes_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{1, 0}
}
func (m *SampleRes_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleRes_Data.Unmarshal(m, b)
}
func (m *SampleRes_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleRes_Data.Marshal(b, m, deterministic)
}
func (m *SampleRes_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleRes_Data.Merge(m, src)
}
func (m *SampleRes_Data) XXX_Size() int {
	return xxx_messageInfo_SampleRes_Data.Size(m)
}
func (m *SampleRes_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleRes_Data.DiscardUnknown(m)
}

var xxx_messageInfo_SampleRes_Data proto.InternalMessageInfo

func (m *SampleRes_Data) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type SampleRes_Error struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SampleRes_Error) Reset()         { *m = SampleRes_Error{} }
func (m *SampleRes_Error) String() string { return proto.CompactTextString(m) }
func (*SampleRes_Error) ProtoMessage()    {}
func (*SampleRes_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{1, 1}
}
func (m *SampleRes_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleRes_Error.Unmarshal(m, b)
}
func (m *SampleRes_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleRes_Error.Marshal(b, m, deterministic)
}
func (m *SampleRes_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleRes_Error.Merge(m, src)
}
func (m *SampleRes_Error) XXX_Size() int {
	return xxx_messageInfo_SampleRes_Error.Size(m)
}
func (m *SampleRes_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleRes_Error.DiscardUnknown(m)
}

var xxx_messageInfo_SampleRes_Error proto.InternalMessageInfo

func (m *SampleRes_Error) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *SampleRes_Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SampleRes_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SampleReq)(nil), "com.example.grpc.SampleReq")
	proto.RegisterType((*SampleRes)(nil), "com.example.grpc.SampleRes")
	proto.RegisterType((*SampleRes_Data)(nil), "com.example.grpc.SampleRes.Data")
	proto.RegisterType((*SampleRes_Error)(nil), "com.example.grpc.SampleRes.Error")
}

func init() { proto.RegisterFile("Service.proto", fileDescriptor_88420990119a24c7) }

var fileDescriptor_88420990119a24c7 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x0d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x48, 0xce, 0xcf, 0xd5, 0x4b,
	0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x4b, 0x2f, 0x2a, 0x48, 0x56, 0x92, 0xe7, 0xe2, 0x0c,
	0x06, 0x73, 0x83, 0x52, 0x0b, 0x85, 0x84, 0xb8, 0x58, 0x72, 0x53, 0x8b, 0x8b, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0xa5, 0xa7, 0x8c, 0x08, 0x15, 0xc5, 0x42, 0x26, 0x5c, 0x2c,
	0x29, 0x89, 0x25, 0x89, 0x60, 0x15, 0xdc, 0x46, 0x0a, 0x7a, 0xe8, 0xe6, 0xe9, 0xc1, 0x95, 0xea,
	0xb9, 0x24, 0x96, 0x24, 0x06, 0x81, 0x55, 0x0b, 0x99, 0x73, 0xb1, 0xa6, 0x16, 0x15, 0xe5, 0x17,
	0x49, 0x30, 0x81, 0xb5, 0x29, 0xe2, 0xd3, 0xe6, 0x0a, 0x52, 0x18, 0x04, 0x51, 0x2f, 0x25, 0xc5,
	0xc5, 0x02, 0x32, 0x06, 0xe4, 0x30, 0xb8, 0xb5, 0x9c, 0x10, 0x43, 0xa5, 0x7c, 0xb9, 0x58, 0xc1,
	0x6a, 0x85, 0xc4, 0xb8, 0xd8, 0x52, 0xf2, 0x73, 0x13, 0x33, 0xf3, 0xa0, 0xd2, 0x50, 0x1e, 0x48,
	0x53, 0x72, 0x7e, 0x4a, 0x2a, 0xd8, 0x52, 0xd6, 0x20, 0x30, 0x5b, 0x48, 0x82, 0x8b, 0x1d, 0xe4,
	0xab, 0xc4, 0xf4, 0x54, 0x09, 0x66, 0xb0, 0x62, 0x18, 0xd7, 0x28, 0x8c, 0x8b, 0x17, 0xe2, 0x08,
	0x68, 0x88, 0x09, 0xb9, 0xc2, 0xfc, 0xed, 0x18, 0xe0, 0x29, 0x24, 0x8d, 0xdb, 0xc9, 0x85, 0x52,
	0x78, 0x24, 0x8b, 0x9d, 0x38, 0xa2, 0xd8, 0x8a, 0xc1, 0x9c, 0x24, 0x36, 0x70, 0x1c, 0x18, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xde, 0x28, 0x75, 0xdc, 0x94, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SampleServiceClient is the client API for SampleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SampleServiceClient interface {
	SampleAPI(ctx context.Context, in *SampleReq, opts ...grpc.CallOption) (*SampleRes, error)
}

type sampleServiceClient struct {
	cc *grpc.ClientConn
}

func NewSampleServiceClient(cc *grpc.ClientConn) SampleServiceClient {
	return &sampleServiceClient{cc}
}

func (c *sampleServiceClient) SampleAPI(ctx context.Context, in *SampleReq, opts ...grpc.CallOption) (*SampleRes, error) {
	out := new(SampleRes)
	err := c.cc.Invoke(ctx, "/com.example.grpc.SampleService/SampleAPI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SampleServiceServer is the server API for SampleService service.
type SampleServiceServer interface {
	SampleAPI(context.Context, *SampleReq) (*SampleRes, error)
}

// UnimplementedSampleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSampleServiceServer struct {
}

func (*UnimplementedSampleServiceServer) SampleAPI(ctx context.Context, req *SampleReq) (*SampleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SampleAPI not implemented")
}

func RegisterSampleServiceServer(s *grpc.Server, srv SampleServiceServer) {
	s.RegisterService(&_SampleService_serviceDesc, srv)
}

func _SampleService_SampleAPI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SampleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SampleServiceServer).SampleAPI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.example.grpc.SampleService/SampleAPI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SampleServiceServer).SampleAPI(ctx, req.(*SampleReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SampleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.example.grpc.SampleService",
	HandlerType: (*SampleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SampleAPI",
			Handler:    _SampleService_SampleAPI_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Service.proto",
}
